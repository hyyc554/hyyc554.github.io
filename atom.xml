<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YoungCe的笔记</title>
  
  <subtitle>献给所有爱我的人</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyyc554.github.io/"/>
  <updated>2018-12-31T14:35:53.758Z</updated>
  <id>https://hyyc554.github.io/</id>
  
  <author>
    <name>YoungCe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django与supervisor 管理进程</title>
    <link href="https://hyyc554.github.io/2018/12/31/Django%E4%B8%8Esupervisor-%E7%AE%A1%E7%90%86%E8%BF%9B%E7%A8%8B/"/>
    <id>https://hyyc554.github.io/2018/12/31/Django与supervisor-管理进程/</id>
    <published>2018-12-31T14:32:35.633Z</published>
    <updated>2018-12-31T14:35:53.758Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h2&gt;&lt;p&gt;在Django项目中，我们需要用到一些独立于Django框架外的脚本。这样一些脚本可能需要独立的持续运行，且具有很强的可维护性，这个时候supervisor就可以排上用场了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/d126accegy1fyq9bijxgvj206h08hjrr.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="https://hyyc554.github.io/tags/Django/"/>
    
      <category term="Linux" scheme="https://hyyc554.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>我的2019计划</title>
    <link href="https://hyyc554.github.io/2018/12/31/%E6%88%91%E7%9A%842019%E8%AE%A1%E5%88%92/"/>
    <id>https://hyyc554.github.io/2018/12/31/我的2019计划/</id>
    <published>2018-12-31T02:40:38.091Z</published>
    <updated>2018-12-31T12:56:34.732Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;毕业后的第一年就这样匆匆而过，&lt;code&gt;interesting&lt;/code&gt;的一年。&lt;br&gt;今年的目标，算下来应该是完成了80%的样子吧。&lt;br&gt;在2018年的最后一天，给自己立一些来年的flag吧:)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2018/12/31/F4pAcq.jpg&quot; alt=&quot;F4pAcq.jpg&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="杂记" scheme="https://hyyc554.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>第4章 数据安全与性能保障</title>
    <link href="https://hyyc554.github.io/2018/12/30/note1/"/>
    <id>https://hyyc554.github.io/2018/12/30/note1/</id>
    <published>2018-12-30T01:15:40.364Z</published>
    <updated>2018-12-30T01:22:36.380Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;目的：理解Redis的运作原理&lt;br&gt;
    
    </summary>
    
    
      <category term="Redis" scheme="https://hyyc554.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>流畅的Python读书笔记(1)</title>
    <link href="https://hyyc554.github.io/2018/12/29/%E6%B5%81%E7%95%85%E7%9A%84python(%E4%B8%80)/"/>
    <id>https://hyyc554.github.io/2018/12/29/流畅的python(一)/</id>
    <published>2018-12-29T15:32:55.162Z</published>
    <updated>2018-12-30T01:17:08.832Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;流畅的Python读书笔记&lt;/p&gt;
&lt;h2 id=&quot;关于&quot;&gt;&lt;a href=&quot;#关于&quot; class=&quot;headerlink&quot; title=&quot;关于&quot;&gt;&lt;/a&gt;关于&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;前言&lt;/p&gt;
&lt;p&gt;Python 官方教程（&lt;a href=&quot;https://docs.python.org/3/tutorial/）的开头是这样写的：&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.python.org/3/tutorial/）的开头是这样写的：&lt;/a&gt; “Python 是一门既&lt;br&gt;容易上手又强大的编程语言。 ”这句话本身并无大碍，但需要注意的是，正因为它既好学&lt;br&gt;又好用，所以很多 Python 程序员只用到了其强大功能的一小部分。&lt;br&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://hyyc554.github.io/tags/Python/"/>
    
      <category term="读书笔记" scheme="https://hyyc554.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>CentOS下安装Docker</title>
    <link href="https://hyyc554.github.io/2018/12/19/%E4%BD%BF%E7%94%A8%20yum%20%E5%AE%89%E8%A3%85%EF%BC%88CentOS%207%E4%B8%8B%EF%BC%89/"/>
    <id>https://hyyc554.github.io/2018/12/19/使用 yum 安装（CentOS 7下）/</id>
    <published>2018-12-18T16:06:48.987Z</published>
    <updated>2018-12-19T14:37:42.202Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用-yum-安装（CentOS-7下）&quot;&gt;&lt;a href=&quot;#使用-yum-安装（CentOS-7下）&quot; class=&quot;headerlink&quot; title=&quot;使用 yum 安装（CentOS 7下）&quot;&gt;&lt;/a&gt;使用 yum 安装（CentOS 7下）&lt;/h2&gt;&lt;p&gt;Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://hyyc554.github.io/tags/Linux/"/>
    
      <category term="Docker" scheme="https://hyyc554.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Python一行代码处理地理围栏</title>
    <link href="https://hyyc554.github.io/2018/12/15/Python%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%A4%84%E7%90%86%E5%9C%B0%E7%90%86%E5%9B%B4%E6%A0%8F/"/>
    <id>https://hyyc554.github.io/2018/12/15/Python一行代码处理地理围栏/</id>
    <published>2018-12-15T11:39:54.269Z</published>
    <updated>2018-12-15T13:55:54.070Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近在工作中遇到了这个一个需求，用户设定地理围栏，后台获取到实时位置信息后通过与围栏比较，判断是否越界等。&lt;/p&gt;
&lt;p&gt;这个过程需要用到数据协议为GEOjson，通过查阅资料后，发现python的shapely库可以非常简单的解决这个问题,接下来演示一下我处理这个问题的过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://hyyc554.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Django与Celery配合实现定时任务</title>
    <link href="https://hyyc554.github.io/2018/12/12/Django%E4%B8%8ECelery%E9%85%8D%E5%90%88%E5%AE%9E%E7%8E%B0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>https://hyyc554.github.io/2018/12/12/Django与Celery配合实现定时任务/</id>
    <published>2018-12-12T12:03:50.206Z</published>
    <updated>2018-12-12T12:22:43.134Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2018/12/12/Ft8aX4.png&quot; alt=&quot;Ft8aX4.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="https://hyyc554.github.io/tags/Django/"/>
    
      <category term="Celery" scheme="https://hyyc554.github.io/tags/Celery/"/>
    
  </entry>
  
  <entry>
    <title>Django与Celery</title>
    <link href="https://hyyc554.github.io/2018/12/09/Django%E4%B8%8ECelery/"/>
    <id>https://hyyc554.github.io/2018/12/09/Django与Celery/</id>
    <published>2018-12-09T15:43:33.825Z</published>
    <updated>2018-12-14T07:15:23.381Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;先祭上 &lt;a href=&quot;https://github.com/celery/django-celery-beat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/celery/django-celery-beat&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python开发者的收藏夹</title>
    <link href="https://hyyc554.github.io/2018/11/25/Python%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E6%94%B6%E8%97%8F%E5%A4%B9/"/>
    <id>https://hyyc554.github.io/2018/11/25/Python开发者的收藏夹/</id>
    <published>2018-11-25T13:23:31.736Z</published>
    <updated>2018-11-25T13:23:31.976Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;记录一些有用的网址&lt;/p&gt;
&lt;p&gt;干货：基础python Web ，主要是django框架&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://hyyc554.github.io/tags/Python/"/>
    
      <category term="杂谈" scheme="https://hyyc554.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Django部署手册</title>
    <link href="https://hyyc554.github.io/2018/11/25/Django%E9%83%A8%E7%BD%B2%E6%89%8B%E5%86%8C/"/>
    <id>https://hyyc554.github.io/2018/11/25/Django部署手册/</id>
    <published>2018-11-25T09:25:00.000Z</published>
    <updated>2018-11-25T09:26:07.033Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、-安装python环境&quot;&gt;&lt;a href=&quot;#一、-安装python环境&quot; class=&quot;headerlink&quot; title=&quot;一、 安装python环境&quot;&gt;&lt;/a&gt;一、 安装python环境&lt;/h2&gt;&lt;p&gt;详情参考我的这一篇博文：&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="https://hyyc554.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>关于HTTP协议的总结</title>
    <link href="https://hyyc554.github.io/2018/11/23/%E5%85%B3%E4%BA%8EHTTP%E5%8D%8F%E8%AE%AE%E7%9A%84%E6%80%BB%E7%BB%93/"/>
    <id>https://hyyc554.github.io/2018/11/23/关于HTTP协议的总结/</id>
    <published>2018-11-23T11:50:39.079Z</published>
    <updated>2018-11-25T04:09:26.364Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HTTP简介&quot;&gt;&lt;a href=&quot;#HTTP简介&quot; class=&quot;headerlink&quot; title=&quot;HTTP简介&quot;&gt;&lt;/a&gt;HTTP简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="HTTP" scheme="https://hyyc554.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>定位服务公司面试复盘</title>
    <link href="https://hyyc554.github.io/2018/11/23/%E5%AE%9A%E4%BD%8D%E6%9C%8D%E5%8A%A1%E5%85%AC%E5%8F%B8%E9%9D%A2%E8%AF%95%E5%A4%8D%E7%9B%98/"/>
    <id>https://hyyc554.github.io/2018/11/23/定位服务公司面试复盘/</id>
    <published>2018-11-23T06:47:16.987Z</published>
    <updated>2018-11-23T06:47:16.994Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;记录一下面试的细节，不断提升自己吧&lt;/p&gt;
&lt;p&gt;本次没有笔试&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂谈" scheme="https://hyyc554.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Django面试总结</title>
    <link href="https://hyyc554.github.io/2018/11/22/Django%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/"/>
    <id>https://hyyc554.github.io/2018/11/22/Django面试总结/</id>
    <published>2018-11-22T12:48:34.034Z</published>
    <updated>2018-11-22T15:32:47.417Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;自己整理的一些面试题，持续更新中。。。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="https://hyyc554.github.io/tags/Django/"/>
    
      <category term="面试" scheme="https://hyyc554.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Django思维导图</title>
    <link href="https://hyyc554.github.io/2018/11/21/Django%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    <id>https://hyyc554.github.io/2018/11/21/Django思维导图/</id>
    <published>2018-11-21T12:50:23.920Z</published>
    <updated>2018-11-21T12:50:44.121Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Django基础&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="https://hyyc554.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>搞懂RESTful</title>
    <link href="https://hyyc554.github.io/2018/11/20/%E4%B8%80%E3%80%81REST%E7%AE%80%E8%BF%B0/"/>
    <id>https://hyyc554.github.io/2018/11/20/一、REST简述/</id>
    <published>2018-11-20T10:30:12.973Z</published>
    <updated>2018-11-20T10:38:43.159Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、REST简述&quot;&gt;&lt;a href=&quot;#一、REST简述&quot; class=&quot;headerlink&quot; title=&quot;一、REST简述&quot;&gt;&lt;/a&gt;一、REST简述&lt;/h2&gt;&lt;p&gt;来自维基百科的解释：&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件风格" scheme="https://hyyc554.github.io/tags/%E8%BD%AF%E4%BB%B6%E9%A3%8E%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>Linux相关思维导图</title>
    <link href="https://hyyc554.github.io/2018/11/19/Linux%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    <id>https://hyyc554.github.io/2018/11/19/Linux思维导图/</id>
    <published>2018-11-19T06:54:09.680Z</published>
    <updated>2018-11-19T07:00:45.442Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这里主要收集一些我认为不错的思维导图，请联系我删除&lt;br&gt;
    
    </summary>
    
    
      <category term="思维导图,Linux" scheme="https://hyyc554.github.io/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE-Linux/"/>
    
  </entry>
  
  <entry>
    <title>源码剖析Django REST framework的认证方式</title>
    <link href="https://hyyc554.github.io/2018/11/19/%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90Django%20REST%20framework%E7%9A%84%E8%AE%A4%E8%AF%81%E6%96%B9%E5%BC%8F/"/>
    <id>https://hyyc554.github.io/2018/11/19/源码剖析Django REST framework的认证方式/</id>
    <published>2018-11-18T16:18:09.681Z</published>
    <updated>2018-11-18T16:26:25.559Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;由Django的CBV模式流程，可以知道在&lt;code&gt;url匹配完成后，会执行自定义的类中的as_view方法&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果自定义的类中没有定义&lt;code&gt;as_view方法&lt;/code&gt;，根据面向对象中类的继承可以知道，则&lt;code&gt;会执行其父类View中的as_view方法&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;在Django的View的as_view方法中，又会调用dispatch方法&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;现在来看看Django rest framework的认证流程&lt;/p&gt;
    
    </summary>
    
    
      <category term="Django" scheme="https://hyyc554.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>MySQL分页limit速度太慢的优化方法</title>
    <link href="https://hyyc554.github.io/2018/11/19/MySQL%E5%88%86%E9%A1%B5limit%E9%80%9F%E5%BA%A6%E5%A4%AA%E6%85%A2%E7%9A%84%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/"/>
    <id>https://hyyc554.github.io/2018/11/19/MySQL分页limit速度太慢的优化方法/</id>
    <published>2018-11-18T16:12:58.276Z</published>
    <updated>2018-11-18T16:26:45.666Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;limit用法&quot;&gt;&lt;a href=&quot;#limit用法&quot; class=&quot;headerlink&quot; title=&quot;limit用法&quot;&gt;&lt;/a&gt;limit用法&lt;/h2&gt;&lt;p&gt;在我们使用查询语句的时候，经常要返回前几条或者中间某几行数据，这个时候怎么办呢？不用担心，mysql已经为我们提供了这样一个功能。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="https://hyyc554.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Python——回顾常用的库</title>
    <link href="https://hyyc554.github.io/2018/11/16/Python%E2%80%94%E2%80%94%E5%9B%9E%E9%A1%BE%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BA%93/"/>
    <id>https://hyyc554.github.io/2018/11/16/Python——回顾常用的库/</id>
    <published>2018-11-16T01:33:26.636Z</published>
    <updated>2018-11-16T01:15:49.996Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这些最基础的面试想不起来会很尴尬&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://hyyc554.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Centos7环境 Mongodb 的安装及远程连接</title>
    <link href="https://hyyc554.github.io/2018/11/13/Centos7%E7%8E%AF%E5%A2%83-Mongodb-%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    <id>https://hyyc554.github.io/2018/11/13/Centos7环境-Mongodb-的安装及远程连接/</id>
    <published>2018-11-13T12:35:38.335Z</published>
    <updated>2018-11-13T12:35:38.529Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;此流程仅本人测试，没有报错。折腾了一会，出了解决不了的BUG还是卸载重装比较方便。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://hyyc554.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
